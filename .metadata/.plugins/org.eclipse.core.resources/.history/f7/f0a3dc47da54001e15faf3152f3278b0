package com.gianproco.amazonviewer.model;

import java.util.Date;
import java.util.ArrayList;

public class Book extends Publication implements IWatchable{
	private int id;
	private String isbn;
	private boolean read;
	private int timeRead;
	
	public Book(String title, Date editionDate, String editorial, String[] authors) {
		super(title, editionDate, editorial);
		setAuthors(authors);
	}


	public String getIsbn() {
		return isbn;
	}

	public void setIsbn(String isbn) {
		this.isbn = isbn;
	}

	public String isRead() {
		String read = "";
		if(this.read) {
			read = "Yes";
		}else {
			read = "No";
		}
		return read;
	}

	public void setRead(boolean read) {
		this.read = read;
	}

	public int getTimeRead() {
		return timeRead;
	}

	public void setTimeRead(int timeRead) {
		this.timeRead = timeRead;
	}

	public int getId() {
		return id;
	}
	
	@Override
	public String toString() {
		String detailBook = "\n :: BOOK ::" + 
				"\nTitle: " + getTitle() +
				"\nEditorial: " + getEditorial() +
				"\nEdition Date: " + getEditionDate();
		
		for(int i = 0; i < getAuthors().length; i++) {
			detailBook += "\t" + getAuthors()[i];
		}
		return detailBook;
	}
	
	@Override
	public Date startWatching(Date dateStart) {
		return dateStart;
	}

	@Override
	public void stopWatching(Date dateStart, Date dateStop) {
		if(dateStop.getTime() > dateStart.getTime()) {
			setTimeRead((int)dateStop.getTime() - (int)dateStart.getTime());
		}else {
			setTimeRead(0);
		}
		
	}
	
	public void read() {
		setRead(true);
		Date dateStart = startWatching(new Date());
		
		for(int i = 0; i < 10000; i++) {
			System.out.println("...........");
		}
		
		stopWatching(dateStart, new Date());
		System.out.println();
		System.out.println("You've read:" + toString());
	}
	
	public static ArrayList<Book> makeBooks(){
		ArrayList<Book> books = new ArrayList<Book>();
		
		for(int i = 1; i < 5; i++) {
			books.add(new Book("Title " + i,new Date(), "Editorial " + i, new String[i]));
		}
		return books;
	}
	
	
}
