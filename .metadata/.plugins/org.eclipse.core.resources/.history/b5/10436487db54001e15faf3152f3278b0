package com.gianproco.amazonviewer;

import java.util.Date;
import java.util.Scanner;
import java.text.SimpleDateFormat;
import java.util.ArrayList;

import com.gianproco.amazonviewer.model.Book;
import com.gianproco.amazonviewer.model.Chapter;
import com.gianproco.amazonviewer.model.Film;
import com.gianproco.amazonviewer.model.Movie;
import com.gianproco.amazonviewer.model.Serie;
import com.gianproco.makereport.Report;

public class Main {

	public static void main(String[] args) {

		
 		showMenu();
		
	}

	public static void showMenu() {
		
		int exit = 0;
		
		do {
			System.out.println("**WELCOME TO AMAZON VIEWER**");
			System.out.println("");
			System.out.println("Choose the number of the desired option");
			System.out.println("1. Movies");
			System.out.println("2. Series");
			System.out.println("3. Books");
			System.out.println("4. Magazines");
			System.out.println("5. Report TODAY");
			System.out.println("6. Report");
			System.out.println("0. Exit");
			
			Scanner sc = new Scanner(System.in);	
			int response = Integer.valueOf(sc.nextLine());
			
			
			switch(response) {
				case 1: showMovies();break;
				case 2: showSeries();break;
				case 3: showBooks();break;	
				case 4: showMagazines();break;
				case 5: makeReport(new Date());break;
				case 6: makeReport();break;
				case 0: exit = 0;System.out.println("Thank you for coming! See you!");break;
				default: System.out.println("Incorrect option\n");break;		
			}
					
		}while(exit != 0);
		
}
	static ArrayList<Movie> movies = Movie.makeMovies();;
	public static void showMovies() {
		int exit = 1;
		 
		do {
			System.out.println("");
			System.out.println("::MOVIES::");
			System.out.println("");
			
			for(int i = 0; i < movies.size(); i++) {
				System.out.println(i + 1 + ". " + movies.get(i).getTitle() + " || Watched: " + movies.get(i).isWatched());
			}
			
			System.out.println("0. Go back to Menu");
			System.out.println();
			
			//Leer respuesta del usuario
			Scanner sc = new Scanner(System.in);
			int response = Integer.valueOf(sc.nextLine());
			
			if(response == 0) {
				showMenu();
			}
			
			if(response > 0) {
				//Seleccionar película
				Movie movieSelected = movies.get(response - 1);
				movieSelected.watch();
				
			}		
			
		}while(exit != 0);
	}
	
	static ArrayList<Serie> series = Serie.makeSeriesList();
	public static void showSeries() {
		int exit = 1;
		
		do {
			System.out.println("");
			System.out.println("::SERIES::");
			System.out.println("");
			
			for(int i = 0; i < series.size(); i++) {
				System.out.println(i + 1 + ". " + series.get(i).getTitle() + " || Watched: " + series.get(i).isWatched());
			}
			
			System.out.println("\n0. Go back to the Menu");
			System.out.println();
			
			//Leer respuesta usuario
			Scanner sc = new Scanner(System.in);
			int response = Integer.valueOf(sc.nextLine());
			
			if(response == 0) {
				exit = 0;
				showMenu();
			}
			
			if(response > 0) {
				showChapters(series.get(response - 1).getChapters());
			}	
			
		}while(exit != 0);
	}

	public static void showChapters(ArrayList<Chapter> chaptersSelected) {
		int exit = 1;
		do {
			System.out.println("");
			System.out.println("::CHAPTERS::");
			System.out.println("");
			
			for(int i = 0; i < chaptersSelected.size(); i++) {
				System.out.println(i + 1 + ". " + chaptersSelected.get(i).getTitle() + " Watched: " + chaptersSelected.get(i).isWatched());
			}
			
			System.out.println("0. Go back to the Menu");
			System.out.println();
			
			//Leer respuesta usuario
			Scanner sc = new Scanner(System.in);
			int response = Integer.valueOf(sc.nextLine());
			
			if(response == 0) {
				exit = 0;
			}
			
			if(response > 0) {
				Chapter chapterSelected = chaptersSelected.get(response - 1);
				chapterSelected.watch();
			}		
						
		}while(exit != 0);
	}
	
	
	static ArrayList<Book> books = Book.makeBooks();
	public static void showBooks() {
		int exit = 1;
		
		do {
			System.out.println();
			System.out.println("::BOOKS::");
			System.out.println();
			
			for(int i = 0; i < books.size(); i++) {
				System.out.println(i + 1 + ". " + books.get(i).getTitle() + " || Read: " + books.get(i).isRead());
			}
			
			System.out.println("0. Go back to Menu");
			System.out.println();
			
			
			
			Scanner sc = new Scanner(System.in);
			int response = Integer.valueOf(sc.nextLine());
			
			if(response == 0) {
				exit = 0;
				showMenu();
			}
			
			if(response > 0) {
				Book bookSelected = books.get(response - 1);
				bookSelected.read();
			}		
			
		}while(exit != 0);
	}

	public static void showMagazines() {
		int exit = 1;
		do {
			System.out.println("");
			System.out.println("::MAGAZINES::");
			System.out.println("");
			
			/*switch(response) {
				case 
			}*/
		}while(exit != 0);
	}
	
	public static void makeReport() {
		Report report = new Report();
		report.setNameFile("report");
		report.setExtension("txt");
		report.setTitle("::VISTOS::");
		String contentReport = "";
		
		for (Movie movie : movies) {
			if(movie.getIsWatched()) {
				System.out.println(":::MOVIES WATCHED:::");
				contentReport += movie.toString() + "\n\n";
			}
		}
		for (Serie serie : series) {
			ArrayList<Chapter> chapters = serie.getChapters();
			
			for (Chapter chapter : chapters) {
				if(chapter.getIsWatched()) {
					contentReport += chapter.toString() + "\n";
				}
			}
			
		}
		for (Book book : books) {
			if(book.getIsRead()){
				contentReport += book.toString() + "\n";
			}
		}
		
		report.setContent(contentReport);
		report.makeReport();
		
		System.out.println("Report done.\n");
	}
	
	public static void makeReport(Date date) {
		//Formatear fecha (definir patron -> año-mes-dia)
		SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd");
		String dateString = df.format(date);
		Report report = new Report();
		report.setNameFile("report-" + dateString);
		
		report.setExtension("txt");
		report.setTitle("::VISTOS::");
		String contentReport = "";
		
		for (Movie movie : movies) {
			if(movie.getIsWatched()) {
				System.out.println(":::MOVIES WATCHED:::");
				contentReport += movie.toString() + "\n\n";
			}
		}
		report.setContent(contentReport);
		report.makeReport();
		
		System.out.println("Report done.");
		
		
	}
	
	
	
}
